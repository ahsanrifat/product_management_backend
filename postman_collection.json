{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID_HERE",
		"name": "Ecommerce Backend API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "YOUR_EXPORTER_ID_HERE"
	},
	"item": [
		{
			"name": "Users & Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"securepassword\",\n    \"full_name\": \"Test User\",\n    \"phone_number\": \"1234567890\",\n    \"address\": \"123 Main St\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"register"
							]
						},
						"description": "Registers a new user account."
					},
					"response": []
				},
				{
					"name": "Register Admin User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"adminpassword\",\n    \"full_name\": \"Admin User\",\n    \"is_admin\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"register"
							]
						},
						"description": "Registers a new admin user account. Use this for testing admin-only endpoints."
					},
					"response": []
				},
				{
					"name": "Login for Access Token (User)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testuser@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "securepassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/users/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"token"
							]
						},
						"description": "Logs in a regular user and sets the `jwt_token` environment variable."
					},
					"response": []
				},
				{
					"name": "Login for Access Token (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"admin_jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "admin@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/users/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"token"
							]
						},
						"description": "Logs in an admin user and sets the `admin_jwt_token` environment variable."
					},
					"response": []
				},
				{
					"name": "Get Current User (Me)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Retrieves the details of the currently authenticated user."
					},
					"response": []
				},
				{
					"name": "Get All Users (Admin Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Retrieves a list of all users. Requires admin privileges."
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Retrieves a specific user by ID. Can be accessed by the user themselves or an admin."
					},
					"response": []
				},
				{
					"name": "Update User (Own Profile)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Updated Test User\",\n    \"address\": \"456 New St\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Updates the current user's profile. Replace '1' with the user's actual ID."
					},
					"response": []
				},
				{
					"name": "Delete User (Admin Only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Deletes a user by ID. Requires admin privileges. Replace '1' with the user's actual ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product (Admin Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Laptop Pro\",\n    \"description\": \"High performance laptop\",\n    \"price\": 1200.00,\n    \"quantity\": 50,\n    \"buying_price\": 1000.00,\n    \"selling_price\": 1200.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Creates a new product. Requires admin privileges."
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Retrieves a list of all products."
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Retrieves a specific product by ID. Replace '1' with the product's actual ID."
					},
					"response": []
				},
				{
					"name": "Update Product (Admin Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 1250.00,\n    \"quantity\": 45\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Updates an existing product. Requires admin privileges. Replace '1' with the product's actual ID."
					},
					"response": []
				},
				{
					"name": "Delete Product (Admin Only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Deletes a product by ID. Requires admin privileges. Replace '1' with the product's actual ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipping_address\": \"789 Oak Ave, Anytown\",\n    \"items\": [\n        {\n            \"product_id\": 1, \n            \"quantity\": 2\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								""
							]
						},
						"description": "Creates a new order for the authenticated user. Ensure product_id exists and quantity is available. Replace '1' with an actual product ID."
					},
					"response": []
				},
				{
					"name": "Get My Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"me"
							]
						},
						"description": "Retrieves all orders made by the currently authenticated user."
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"1"
							]
						},
						"description": "Retrieves a specific order by ID. Accessible by the order's buyer or an admin. Replace '1' with an actual order ID."
					},
					"response": []
				},
				{
					"name": "Get All Orders (Admin Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								""
							]
						},
						"description": "Retrieves a list of all orders in the system. Requires admin privileges."
					},
					"response": []
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get Prometheus Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/metrics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"metrics"
							]
						},
						"description": "Retrieves Prometheus metrics in a format consumable by Prometheus."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": "",
			"type": "string",
			"description": "JWT token for authenticated user requests."
		},
		{
			"key": "admin_jwt_token",
			"value": "",
			"type": "string",
			"description": "JWT token for authenticated admin user requests."
		}
	]
}
